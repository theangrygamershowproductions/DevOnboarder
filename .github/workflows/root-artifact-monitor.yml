---
name: Root Artifact Monitor

on:
    push:
        branches: [main, develop, "feat/*", "fix/*"]
    pull_request:
        branches: [main, develop]
    schedule:
        # Run artifact monitoring every 6 hours
        - cron: "0 */6 * * *"
    workflow_dispatch:
        inputs:
            cleanup_mode:
                description: "Cleanup mode"
                required: false
                default: "check"
                type: choice
                options:
                    - "check"
                    - "clean"

permissions:
    contents: read
    issues: write
    pull-requests: write

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    CODEX_TRIGGER: "ci:artifact-guard"

jobs:
    artifact-monitor:
        name: "Root Artifact Guard"
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: Check root artifacts
              id: check
              run: |
                  if bash scripts/check_root_artifacts.sh; then
                      echo "status=clean" >> $GITHUB_OUTPUT
                      echo "violations=0" >> $GITHUB_OUTPUT
                  else
                      echo "status=violations" >> $GITHUB_OUTPUT
                      echo "violations=1" >> $GITHUB_OUTPUT
                  fi

            - name: Generate report
              if: steps.check.outputs.status == 'violations'
              run: |
                  mkdir -p logs/ci

                  cat > logs/ci/artifact_report.md << EOF
                  ## Root Artifact Violations

                  **Branch**: ${GITHUB_REF_NAME}
                  **Commit**: ${GITHUB_SHA:0:7}
                  **Generated**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
                  **Trigger**: ${CODEX_TRIGGER}

                  ### Violations Found

                  $(bash scripts/list_root_violations.sh)

                  ### Resolution

                  Run cleanup script:
                  \`\`\`bash
                  bash scripts/clean_root_artifacts.sh
                  \`\`\`
                  EOF

            - name: Auto-cleanup
              if: |
                  github.event.inputs.cleanup_mode == 'clean' &&
                  steps.check.outputs.status == 'violations'
              run: |
                  bash scripts/clean_root_artifacts.sh

            - name: Update pull request comment
              if: |
                  github.event_name == 'pull_request' &&
                  steps.check.outputs.status == 'violations'
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const report = fs.readFileSync('logs/ci/artifact_report.md', 'utf8');

                      const { data: comments } = await github.rest.issues.listComments({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: context.issue.number,
                      });

                      const botComment = comments.find(comment =>
                          comment.user.type === 'Bot' &&
                          comment.body.includes('Root Artifact Violations')
                      );

                      const commentBody = `## Root Artifact Monitor Report

                      ${report}

                      ---
                      *This comment is automatically updated by the Root Artifact Guard*`;

                      if (botComment) {
                          await github.rest.issues.updateComment({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              comment_id: botComment.id,
                              body: commentBody
                          });
                      } else {
                          await github.rest.issues.createComment({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              issue_number: context.issue.number,
                              body: commentBody
                          });
                      }

            - name: Create issue for scheduled violations
              if: |
                  github.event_name == 'schedule' &&
                  steps.check.outputs.status == 'violations'
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const report = fs.readFileSync('logs/ci/artifact_report.md', 'utf8');

                      const title = `Root artifact violations detected - ${new Date().toISOString().split('T')[0]}`;

                      const body = `## Persistent Root Artifact Pollution

                      The Root Artifact Guard has detected persistent artifact pollution in the repository root.

                      ${report}

                      ## Required Actions

                      1. **Review violations** listed above
                      2. **Run cleanup** using the suggested commands
                      3. **Update processes** to prevent future pollution
                      4. **Verify compliance** with \`bash scripts/check_root_artifacts.sh\`

                      **Auto-generated by**: Root Artifact Guard
                      **Detection Context**: Scheduled monitoring
                      **Priority**: High (CI hygiene violation)
                      `;

                      await github.rest.issues.create({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          title: title,
                          body: body,
                          labels: ['ci-hygiene', 'automated']
                      });

            - name: Upload reports
              if: steps.check.outputs.status == 'violations'
              uses: actions/upload-artifact@v4
              with:
                  name: "artifact-report-${{ github.run_number }}"
                  path: logs/ci/
                  retention-days: 7
