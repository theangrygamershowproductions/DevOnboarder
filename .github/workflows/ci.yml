name: CI

on:
    push:
    pull_request:

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.12"
            - name: Set up Node
              uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Install dev dependencies
              run: pip install -r requirements-dev.txt
            - name: Setup environment
              run: ./scripts/setup-env.sh
            - name: Install package
              run: pip install -e .
            - name: Validate OpenAPI contract
              run: |
                pip install openapi-spec-validator
                openapi-spec-validator --enable-format-check src/devonboarder/openapi.json
            - name: Alembic migration lint
              run: ./scripts/alembic_migration_check.sh
            - name: Doc coverage check
              run: python scripts/check_docstrings.py src/devonboarder
            - name: Run linter
              run: ruff check .
            - name: Prepare environment file
              run: cp .env.example .env.dev
            - name: Start docker compose
              run: docker compose -f docker-compose.ci.yaml --env-file .env.dev up -d
            - name: Wait for auth service
              run: |
                for i in {1..30}; do
                  if nc -z localhost 8002; then
                    echo "Service is up!";
                    break
                  fi
                  echo "Waiting for service...";
                  sleep 2
                done
            - name: Run tests with coverage
              run: pytest --cov=src --cov-fail-under=85
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
            - name: Install bot dependencies
              run: npm ci
              working-directory: bot
            - name: Run bot tests
              run: npm test
              working-directory: bot
            - name: Wait for auth service
              run: |
                for i in {1..30}; do
                  nc -z localhost 8002 && exit 0
                  echo "Waiting for service..."
                  sleep 2
                done
                echo "Auth service failed to start"
                exit 1
            - name: Check CORS & security headers
              run: |
                pip install requests
                python scripts/check_headers.py
              env:
                CHECK_HEADERS_URL: http://localhost:8002/api/user
            - name: Stop docker compose
              run: docker compose -f docker-compose.ci.yaml --env-file .env.dev down
            - name: Label Codex PR
              if: github.actor == 'codex[bot]'
              uses: actions-ecosystem/action-add-labels@v1
              with:
                labels: |
                  ðŸš§ Codex
