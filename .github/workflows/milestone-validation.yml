---
name: Milestone Documentation Validation

on:
  push:
    paths:
      - 'milestones/**/*.md'
      - 'scripts/validate_milestone_format.py'
      - '.github/workflows/milestone-validation.yml'
  pull_request:
    paths:
      - 'milestones/**/*.md'
      - 'scripts/validate_milestone_format.py'
      - '.github/workflows/milestone-validation.yml'

jobs:
  validate-milestones:
    permissions:
      contents: read
      pull-requests: write  # Required for PR comments on validation failure
    runs-on: ubuntu-latest
    name: Validate Milestone Documentation Format

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install -e .[test]

      - name: Validate milestone format
        run: |
          source .venv/bin/activate
          echo "Validating milestone documentation format..."
          python scripts/validate_milestone_format.py milestones/ --summary

      - name: Upload validation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: milestone-validation-results
          path: logs/milestone_validation_*.log
          retention-days: 7

      - name: Comment on PR with validation results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Find the latest validation log
            const logsDir = 'logs';
            if (fs.existsSync(logsDir)) {
              const logFiles = fs.readdirSync(logsDir)
                .filter(file => file.startsWith('milestone_validation_'))
                .sort()
                .reverse();

              if (logFiles.length > 0) {
                const logContent = fs.readFileSync(path.join(logsDir, logFiles[0]), 'utf8');

                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## Milestone Validation Failed

            The milestone documentation validation has failed. Please review the issues below:

            \`\`\`
            ${logContent}
            \`\`\`

            Please run locally to fix:
            \`\`\`bash
            source .venv/bin/activate
            python scripts/validate_milestone_format.py milestones/
            python scripts/fix_milestone_duplicates.py milestones/
            \`\`\`
            `
                });
              }
            }
