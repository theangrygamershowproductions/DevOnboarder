name: Build & Deploy AAR UI

on:
  push:
    paths:
      - "app/aar-ui/**"
      - "scripts/aar_api/**"
      - "docs/AAR/schema/**"
      - "docs/AAR/templates/**"
      - "aar/**"
      - ".github/workflows/aar-ui.yml"
  pull_request:
    paths:
      - "app/aar-ui/**"
      - "scripts/aar_api/**"
      - "aar/**"

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: devonboarder-aar-ui
  CACHE_BUSTER: v-node22-py312

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: app/aar-ui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            aar/package-lock.json
            app/aar-ui/package-lock.json

      - name: Install AAR system dependencies
        run: |
          cd aar
          npm ci

      - name: Install AAR UI dependencies
        run: |
          cd app/aar-ui
          npm ci

      - name: Test AAR system
        run: |
          cd aar
          npm run aar:full-test

      - name: Type check AAR UI
        run: |
          cd app/aar-ui
          npm run type-check

      - name: Lint AAR UI
        run: |
          cd app/aar-ui
          npm run lint || true  # Don't fail on lint warnings for now

  deploy-dev:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read

    steps:
      - name: Deploy to development
        run: |
          echo "Deploying AAR UI to development environment"
          echo "Image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"
          echo "Would trigger deployment via webhook or SSH to development server"
          # Add actual deployment logic here

  deploy-prod:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying AAR UI to production environment"
          echo "Image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
          echo "Would trigger deployment via webhook or SSH to production server"
          # Add actual deployment logic here
