# ---
# codex-agent:
#   name: Agent.CiMonitor
#   role: Watches CI logs for rate-limit errors and opens an issue
#   scope: .github/workflows/ci-monitor.yml
#   triggers: Completed CI workflow runs
#   output: Issue with log excerpt
# ---
name: CI Monitor

on:
    workflow_run:
        workflows: ["CI"]
        types:
            - completed

permissions:
    issues: write

jobs:
    validate-yaml:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: ibiqlik/action-yamllint@v3
              with:
                  file_or_dir: ".github/workflows/**/*.yml"
                  config_file: .github/.yamllint-config
    report-rate-limit:
        needs: validate-yaml
        if: github.event.workflow_run.conclusion == 'failure'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v4
              if: github.event.workflow_run.conclusion == 'failure'
              with:
                  run-id: ${{ github.event.workflow_run.id }}
                  name: ci-logs
                  path: logs
            - name: Setup GitHub CLI
              uses: ./.github/actions/setup-gh-cli
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
            - name: Show gh version
              run: which gh && gh --version
            - name: Check for rate-limit error
              id: check
              run: |
                  match=$(grep -iE 'rate limit|429 Too Many Requests|quota exceeded' -m1 logs/*.log || true)
                  if [ -n "$match" ]; then
                    printf -- "hit=true\n" >> "$GITHUB_OUTPUT"
                    printf -- "match=%s\n" "$match" >> "$GITHUB_OUTPUT"
                    printf -- "%s\n" "$match"
                  else
                    printf -- "hit=false\n" >> "$GITHUB_OUTPUT"
                  fi
            - name: Install PyYAML
              if: steps.check.outputs.hit == 'true'
              run: pip install PyYAML
            - name: Validate orchestration bot permissions
              run: 'bash scripts/validate-bot-permissions.sh'
            - name: Open issue on rate-limit
              if: steps.check.outputs.hit == 'true'
              env:
                  GH_TOKEN: ${{ secrets.CI_ISSUE_AUTOMATION_TOKEN || secrets.CI_ISSUE_TOKEN || secrets.GITHUB_TOKEN }}
              run: |
                  printf '%s\n' \
                    "Our CI run failed due to API rate limits. Matched line: ${{ steps.check.outputs.match }}." \
                    "Logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" > body.md
                  jq -Rs --arg title "\ud83d\udea8 CI Rate Limit Exceeded" '{title:$title,body:.}' body.md > notify.json
                  gh workflow run notify.yml -f data="$(cat notify.json)"
