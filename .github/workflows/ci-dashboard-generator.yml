name: CI Dashboard Report Generator

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  workflow_dispatch:
    inputs:
      force_generate:
        description: 'Force generate dashboard report'
        required: false
        default: 'false'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  generate-dashboard:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl

      - name: Install GitHub CLI
        uses: ./.github/actions/setup-gh-cli
        with:
          version: stable
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install -e '.[test]'

      - name: Generate CI Dashboard Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source .venv/bin/activate
          python scripts/generate_ci_dashboard_report.py

      - name: Download CI failure issue artifact
        if: github.event.workflow_run.event == 'pull_request'
        uses: actions/download-artifact@v4
        with:
          name: ci-failure-issue
          path: ./ci-failure-data
        continue-on-error: true

      - name: Create artifact summary
        run: |
          {
            printf -- "CI Dashboard Report Generated\n"
            printf -- "\n"
            printf -- "A comprehensive CI troubleshooting dashboard has been generated\n"
            printf -- "Download the ci-dashboard-report artifact to view the interactive HTML dashboard\n"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload Dashboard Report
        uses: actions/upload-artifact@v4
        with:
          name: ci-dashboard-report
          path: |
            logs/ci_dashboard_report.html
            logs/ci_dashboard_data.json
          retention-days: 30

      - name: Comment on PR with Dashboard Link
        if: github.event.workflow_run.event == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          echo "Processing PR comment for dashboard"
          gh pr list --state open --json number,headRefName > pr_list.json
          echo "PR list retrieved"

          cat > dashboard_comment.md << 'EOF'
          **CI Dashboard Report Generated**

          A comprehensive troubleshooting dashboard has been generated for this PR.

          **To access:** Download the ci-dashboard-report artifact from this workflow run.

          **Features:** Pattern analysis, health monitoring, failure analysis, script inventory.
          EOF

          echo "Dashboard comment file created"

          if [ -f "./ci-failure-data/ci_failure_issue.txt" ]; then
            echo "CI failure issue found"
            cat >> dashboard_comment.md << 'EOF'

          **Related CI Issue:** See linked issue for additional failure details.
          EOF
          fi

          echo "Comment processing complete"
