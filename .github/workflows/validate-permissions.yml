---
# codex-agent:
#   name: Agent.ValidatePermissions
#   role: Lints workflow files and bot permissions
#   scope: .github/workflows/validate-permissions.yml
#   triggers: Push and pull_request events
#   output: CI logs
# ---
name: Validate Permissions

on:
    push: null
    pull_request: null

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read
    pull-requests: write

jobs:
    validate-yaml:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: ibiqlik/action-yamllint@v3
              with:
                  file_or_dir: ".github/workflows/**/*.yml"
                  config_file: .github/.yamllint-config
    check:
        needs: validate-yaml
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - name: Install yamllint
              run: pip install yamllint
            - name: Lint bot permissions
              run: bash scripts/lint-bot-permissions.sh
            - name: Verify agent docs exist
              run: |
                  test -f agents/index.md
                  test -f agents/templates/Agent.md
            - name: Check for disallowed commands
              run: |
                  if grep -R "gh issue" .github/workflows | \
                      grep -v validate-permissions.yml; then
                    echo "Direct gh issue command found" >&2
                    exit 1
                  fi
                  if grep -R "notify-humans.sh" .github/workflows | \
                      grep -v validate-permissions.yml; then
                    echo "External notification script used" >&2
                    exit 1
                  fi
                  if grep -R "hooks.slack.com" .github/workflows | \
                      grep -v validate-permissions.yml; then
                    echo "Direct Slack notification found" >&2
                    exit 1
                  fi
            - name: Ensure continuous improvement checklist is complete
              if: github.event_name == 'pull_request'
              run: |
                  if grep -q "- \\\[ \\\]" \
                      docs/checklists/continuous-improvement.md; then
                    echo "Unchecked items in continuous-improvement.md" >&2
                    exit 1
                  fi
            - name: Validate PR checklist
              if: github.event_name == 'pull_request'
              run: >
                  bash scripts/validate_pr_checklist.sh
                  "${{ github.event.pull_request.number }}"
              env:
                  GH_TOKEN: ${{ secrets.BOT_PR_WRITE_TOKEN }}
