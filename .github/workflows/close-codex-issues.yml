# ---
# codex-agent:
#   name: Agent.CloseCodexIssues
#   role: Closes Codex issues referenced in merged pull requests
#   scope: .github/workflows/close-codex-issues.yml
#   triggers: Pull request closed after merge
#   output: Closed Codex issues with comment
# ---
name: Close Codex Issues

on:
    pull_request:
        types: [closed]

permissions:
    issues: write

jobs:
    validate-yaml:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: ibiqlik/action-yamllint@v3
              with:
                  file_or_dir: ".github/workflows/**/*.yml"
                  config_file: .github/.yamllint-config
    close:
        needs: validate-yaml
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - name: Setup GitHub CLI
              uses: ./.github/actions/setup-gh-cli
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
            - name: Show gh version
              run: which gh && gh --version
            - name: Verify gh version
              run: |
                  ver=$(gh --version | head -n1 | awk '{print $3}')
                  major=${ver%%.*}
                  if [ "$major" -lt 2 ]; then
                    echo "::error::GitHub CLI v2 or higher required" >&2
                    exit 1
                  fi
            - name: Install PyYAML
              run: pip install PyYAML
            - name: Validate orchestration bot permissions
              run: 'bash scripts/validate-bot-permissions.sh'
            - name: Close referenced Codex issues
              env:
                  PR_BODY: ${{ github.event.pull_request.body }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  printf -- '%s\n' "$PR_BODY" | grep -oE 'Fixes #[0-9]+' | sed 's/Fixes #//' > issues.txt || true

                  if [ -s issues.txt ]; then
                      echo "Found Codex issues to close:"
                      cat issues.txt

                      while read -r issue_number; do
                          if [ -n "$issue_number" ]; then
                              echo "Closing issue #$issue_number using approved wrapper"
                              bash scripts/ci_gh_issue_wrapper.sh close "$issue_number" "Automatically closed by merged PR #${{ github.event.pull_request.number }}"
                          fi
                      done < issues.txt
                  else
                      echo "No Codex issues referenced in PR body"
                  fi
