# TOKEN: GITHUB_TOKEN (default with explicit permissions)
# PERMISSIONS: contents:read, issues:write
# PURPOSE: Discord bot automation and integration
# COMPLIANCE: Universal Workflow Permissions Policy + No Default Token Policy v1.0
# SCOPE: Bot deployment and Discord service management

name: Bot Component CI

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        default: '22'
        type: string

jobs:
  bot-tests:
    name: Discord Bot Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bot

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: bot/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: Run type checking
        run: npm run type-check

      - name: Build TypeScript
        run: npm run build

      - name: Run tests with coverage
        run: npm run coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./bot/coverage/coverage-final.json
          flags: bot
          name: bot-coverage

      - name: Validate bot configuration
        run: |
          echo "Validating bot configuration..."
          if [ -f "package.json" ]; then
            echo "Package.json found"
            npm run validate-config || echo "Config validation script not found"
          fi

      - name: Check Discord.js compatibility
        run: |
          echo "Checking Discord.js version compatibility..."
          npm list discord.js
          echo "Discord.js compatibility check complete"

      - name: Bot component summary
        run: |
          echo "=== Bot Component CI Complete ==="
          echo "Node.js version: ${{ inputs.node-version }}"
          echo "Coverage requirement: 100%"
          echo "All bot tests and validations passed"
