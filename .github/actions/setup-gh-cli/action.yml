name: 'Setup GitHub CLI (DevOnboarder Custom)'
description: 'Install and configure GitHub CLI with version control and Node.js compatibility'
author: 'DevOnboarder Team'

inputs:
  version:
    description: 'GitHub CLI version to install (default: latest)'
    required: false
    default: 'latest'
  token:
    description: 'GitHub token for authentication'
    required: false

outputs:
  version:
    description: 'Installed GitHub CLI version'
    value: ${{ steps.install.outputs.version }}
  path:
    description: 'Path to GitHub CLI binary'
    value: ${{ steps.install.outputs.path }}

runs:
  using: 'composite'
  steps:
    - name: Install GitHub CLI
      id: install
      shell: bash
      run: |
        set -euo pipefail

        echo "Installing GitHub CLI..."

        # Determine version to install
        if [ "${{ inputs.version }}" = "latest" ] || [ "${{ inputs.version }}" = "stable" ]; then
          VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | jq -r '.tag_name' | sed 's/^v//')
        else
          VERSION="${{ inputs.version }}"
        fi

        echo "Target version: $VERSION"

        # Determine platform
        case "$(uname -s)" in
          Linux*)  PLATFORM="linux" ;;
          Darwin*) PLATFORM="macOS" ;;
          *)       echo "Unsupported platform: $(uname -s)" && exit 1 ;;
        esac

        case "$(uname -m)" in
          x86_64)  ARCH="amd64" ;;
          arm64)   ARCH="arm64" ;;
          *)       echo "Unsupported architecture: $(uname -m)" && exit 1 ;;
        esac

        # Download and install
        DOWNLOAD_URL="https://github.com/cli/cli/releases/download/v${VERSION}/gh_${VERSION}_${PLATFORM}_${ARCH}.tar.gz"

        echo "Downloading from: $DOWNLOAD_URL"
        curl -fsSL "$DOWNLOAD_URL" | tar -xzf -

        # Move to a standard location
        INSTALL_DIR="/usr/local/bin"
        if [ ! -w "$INSTALL_DIR" ]; then
          INSTALL_DIR="$HOME/.local/bin"
          mkdir -p "$INSTALL_DIR"
        fi

        mv "gh_${VERSION}_${PLATFORM}_${ARCH}/bin/gh" "$INSTALL_DIR/"
        chmod +x "$INSTALL_DIR/gh"

        # Add to PATH if needed
        echo "$INSTALL_DIR" >> $GITHUB_PATH

        # Configure authentication if token provided
        if [ -n "${{ inputs.token }}" ]; then
          echo "${{ inputs.token }}" | gh auth login --with-token
        fi

        # Verify installation
        INSTALLED_VERSION=$(gh --version | head -n1 | cut -d' ' -f3)
        echo "Successfully installed GitHub CLI v$INSTALLED_VERSION"

        # Set outputs
        echo "version=$INSTALLED_VERSION" >> $GITHUB_OUTPUT
        echo "path=$INSTALL_DIR/gh" >> $GITHUB_OUTPUT

        # Cleanup
        rm -rf "gh_${VERSION}_${PLATFORM}_${ARCH}"

branding:
  icon: 'terminal'
  color: 'blue'
