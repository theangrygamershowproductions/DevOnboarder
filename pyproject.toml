# =============================================================================
# File: pyproject.toml
# Version: 1.0.0
# Author: DevOnboarder Project
# Created: 2025-07-25
# Updated: 2025-07-25
# Purpose: Python project configuration and dependencies
# Dependencies: setuptools, ruff, pytest
# DevOnboarder Project Standards: Compliant with copilot-instructions.md
# Format: TOML - Python Project Configuration Standard
# =============================================================================

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F"]

[tool.ruff.lint.per-file-ignores]
"scripts/generate_aar_portal.py" = ["E501"]  # HTML templates have long lines
"scripts/generate_ci_dashboard_report.py" = ["E501"]  # HTML templates have long lines

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".venv", "__pycache__", ".git", "build", "dist", "*.egg-info"]

[project]
name = "devonboarder"
version = "0.1.0"
description = "Sample trunk-based workflow project"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
dependencies = [
    "httpx<0.29",
    "fastapi",
    "uvicorn",
    "SQLAlchemy<3.0",
    "passlib[bcrypt]",
    "bcrypt>=4.3.0",
    "PyJWT",
    "python-dotenv",
    "alembic",
    "psycopg2-binary",
    "pyyaml>=6.0",
    "logfire>=4.11.0",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "requests",
    "pyyaml",
    "jsonschema",
    "black",
    "openapi-spec-validator",
    "ruff",
    "mypy",
    "types-requests",
    "pip-audit",
    "bandit",
    "vale",  # Documentation linting (Python wrapper for Vale binary)
    # Phase 5: Advanced Orchestration dependencies
    "aiohttp",
    "psutil",
    "scikit-learn",
    "numpy",
    "pandas",
]

[project.scripts]
devonboarder = "devonboarder.cli:main"
devonboarder-server = "devonboarder.server:main"
devonboarder-api = "xp.api:main"
devonboarder-auth = "devonboarder.auth_service:main"
devonboarder-integration = "discord_integration.api:main"
devonboarder-feedback = "feedback_service.api:main"
devonboarder-agile = "llama2_agile_helper.api:main"

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.coverage.run]
source = ["src"]
data_file = "logs/.coverage"
parallel = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "logs/htmlcov"

[tool.pytest.ini_options]
cache_dir = "logs/.pytest_cache"
addopts = [
    "--cov=src",
    "--cov-report=html:logs/htmlcov",
    "--cov-report=xml:logs/coverage.xml",
    "--cov-report=term",
    "--cov-fail-under=95"
]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.bandit]
exclude_dirs = ["tests", ".venv", "build", "dist"]
skips = ["B101", "B105", "B106"]

[tool.bandit.assert_used]
skips = ["**/test_*.py", "**/tests/**/*.py"]

[tool.mypy]
cache_dir = "logs/.mypy_cache"
show_error_codes = true
warn_unused_ignores = true
python_version = "3.12"
files = ["src/**/*.py"]
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "__pycache__/"
]
# Configuration from legacy mypy.ini to maintain compatibility
ignore_missing_imports = true
pretty = true
disable_error_code = ["misc", "valid-type", "str-bytes-safe"]
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
