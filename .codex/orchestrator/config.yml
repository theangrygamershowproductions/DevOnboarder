version: 1
org: theangrygamershowproductions
project: DevOnboarder
permissions_matrix: .codex/bot-permissions.yaml

environments:
  dev: {default_branch: main, triggers: [workflow_dispatch, push, pull_request]}
  staging: {default_branch: main, triggers: [schedule], schedule: "0 */6 * * *"}
  prod: {default_branch: main, triggers: [release, manual_approval]}

routing:
  - if: event == "pull_request" && label ~ "codex:route"
    run: [codex_router]
  - if: event == "pull_request" && !(label ~ "codex:route")
    run: [codex_triage]
  - if: event == "workflow_run" && job == "tests" && status == "failure"
    run: [ci_triage_guard, coverage_orchestrator]
  - if: event == "schedule"
    run: [coverage_orchestrator]

agents:
  codex_router:
    ref: ./.codex/agents/tags/codex_router/agent_tags_codex_router.md
    secrets: [CODEX_API_KEY]
    permissions: [route_agents, create_issue, apply_labels]
  codex_triage:
    ref: ./.codex/agents/tags/codex_triage/agent_tags_codex_triage.md
    permissions: [create_issue, apply_labels]
  coverage_orchestrator:
    ref: ./.codex/agents/tags/coverage_orchestrator/agent_tags_coverage_orchestrator.md
    secrets: [CODEX_API_KEY]
    permissions: [read_ci_logs, open_pr]
  ci_triage_guard:
    ref: ./.codex/agents/tags/ci_triage_guard/agent_tags_ci_triage_guard.md
    permissions: [block_generation]

policies:
  node_version: "20.x"
  python_version: "3.11"
  forbid: [curl_pipe_sh, remote_code_exec]
  require: [lockfile_integrity, gh_version>=2.0.0]

artifacts:
  logs_dir: logs/
  reports_dir: reports/
